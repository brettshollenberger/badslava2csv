#!/usr/bin/env ruby

require "pry"
require "nokogiri"
require "open-uri"
require "csv"
require "pathname"
require "rake"
require 'optparse'

Options = Struct.new(:city, :output_dir)

class Parser
  def self.parse(options)
    args = Options.new("San Francisco", "./data")

    opt_parser = OptionParser.new do |opts|
      opts.banner = "Usage: badslava2csv [options]"

      opts.on("-cCITY", "--city=CITY", "City to list") do |city|
        args.city = city
      end

      opts.on("-oOUTPUTDIR", "--output-dir=OUTPUTDIR", "Output Director") do |output_dir|
        args.output_dir = output_dir
      end

      opts.on("-h", "--help", "Prints this help") do
        puts opts
        exit
      end
    end

    opt_parser.parse!(options)
    return args
  end
end
options = Parser.parse(ARGV)

city = options.city
output_dir = File.expand_path(options.output_dir)

puts "Listing events for #{city}"

url = "http://badslava.com/open-mics.php?city=#{URI.encode(city)}&state=CA&type=Comedy"
output_path = Pathname.new(output_dir)

FileUtils.mkdir_p(output_path)

doc = Nokogiri::HTML(open(url))

days = doc.css("#demo [color=red]").map { |day| day.children.text }.reject! { |x| x == "Monthly" }

days.reverse!

data = doc.css("table").map do |table|
  headers = table.css("thead").css("tr").first.css("th").map do |table_header|
    table_header.children.first.text.downcase.split(" ").join("_")
  end

  rows = table.css("tbody").map do |tbody|
    tbody.css("td").map do |table_division|
      table_division.children.text
    end
  end

  row_hashes = rows.map do |row|
    headers.zip(row).to_h
  end

  day = days.pop

  row_hashes.map do |row|
    start_time = row["time"].upcase.gsub(/(AM|PM)/) { |m| " #{m}" }
    end_time = (Time.parse(start_time) + (3600 * 2)).strftime("%l:%M %p").strip
    {
      "Subject" => row["name"],
      "Start Date" => day.split(" ").last,
      "Start Time" => start_time,
      "End Time" => end_time,
      "All Day Event" => "False",
      "Private" => "True",
      "Description" => row["phone"],
      "Location" => "#{row["venue"]} #{row["address"]}, #{row["city"]}, #{row["state"]}"
    }
  end
end

data.flatten!

filename = "google.csv"
path     = output_path.join(filename)

CSV.open(path, "wb") do |csv|
  csv << data.first.keys

  data.map(&:values).each do |row|
    csv << row
  end
end

puts path
